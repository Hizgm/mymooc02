<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom" >
    <!--查询商品评价-->
  <select id="queryItemComments" resultType="com.imooc.pojo.vo.ItemCommentVO" parameterType="Map">
    SELECT
	  ic.comment_level as commentLevel,
	  ic.content as content,
	  ic.sepc_name as sepcName,
	  ic.created_time as createdTime,
	  u.face as userFace,
	  u.nickname as nickName
    FROM
	  items_comments as ic
    LEFT JOIN users as u ON ic.user_id = u.id
    WHERE ic.item_id = #{paramsMap.itemId}
      <if test="paramsMap.level != null and paramsMap.level != '' ">
        AND ic.comment_level = #{paramsMap.level}
      </if>
  </select>
    <!--商品搜索-->
  <select id="searchItems" resultType="com.imooc.pojo.vo.SearchItemsVO" parameterType="Map">
    SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        itemSpec.price as price
    FROM
	    items i
    LEFT JOIN
	    items_img ii
    ON
	    i.id = ii.item_id
    LEFT JOIN
	(
	  SELECT
		  item_id as itemId,
		  MIN(price_discount) as price
	  FROM
		  items_spec
	  GROUP BY
		  item_id
	) as itemSpec
    ON
	  i.id = itemSpec.itemId
    WHERE
	  ii.is_main = 1
	  <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
        AND i.item_name like '%${paramsMap.keywords}%'
      </if>
      ORDER BY
      <choose>
          <when test=" paramsMap.sort == &quot;c&quot; ">
            i.sell_counts DESC
          </when>
          <when test=" paramsMap.sort == &quot;p&quot; ">
              itemSpec.price ASC
          </when>
          <otherwise>
            i.item_name ASC
          </otherwise>
      </choose>
  </select>

    <!--根据三级分类进行商品搜索-->
  <select id="searchItemsByThirdCat" resultType="com.imooc.pojo.vo.SearchItemsVO" parameterType="Map">
    SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        itemSpec.price as price
    FROM
      items i
    LEFT JOIN
      items_img ii
    ON
      i.id = ii.item_id
    LEFT JOIN
        (
        SELECT
          item_id as itemId,
          MIN(price_discount) as price
        FROM
          items_spec
        GROUP BY
          item_id
        ) as itemSpec
    ON
      i.id = itemSpec.itemId
    WHERE
      ii.is_main = 1
      AND
      i.cat_id = #{paramsMap.catId}
    ORDER BY
    <choose>
        <when test=" paramsMap.sort == &quot;c&quot; ">
            i.sell_counts DESC
        </when>
        <when test=" paramsMap.sort == &quot;p&quot; ">
            itemSpec.price ASC
        </when>
        <otherwise>
            i.item_name ASC
        </otherwise>
    </choose>
  </select>
    <!--根据商品规格ID查询商品列表-->
  <select id="queryItemsBySpecIds" resultType="com.imooc.pojo.vo.ShopCartItemsVO" parameterType="List">
    SELECT
        items.id as itemId,
        items.item_name as itemName,
        i_img.url as imgUrl,
        i_spec.id as specId,
        i_spec.name as specName,
        i_spec.price_discount as priceDiscount,
        i_spec.price_normal as priceNormal
    FROM
        items_spec i_spec
    LEFT JOIN items items ON items.id = i_spec.item_id
    LEFT JOIN items_img i_img ON items.id = i_img.item_id
    WHERE
        i_img.is_main = 1
    AND
        i_spec.id IN
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
          #{specId}
        </foreach>
  </select>
    <!--通过乐观锁的方式扣除商品库存-->
  <update id="decreaseItemSpecStock">
    update items_spec
    set stock = stock - #{pendingCounts}
    where id = #{specId}
    and stock >= #{pendingCounts}
  </update>
</mapper>